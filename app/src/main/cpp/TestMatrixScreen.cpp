/* DO NOT EDIT THIS FILE - it is machine generated */
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <string.h>
#include <jni.h>

#include <android/log.h>
/* Header for class com_example_testmatrix_TestMatrixScreen */

static const char *TAG="TestMatrixScreen";
#define LOGI(fmt, args...) __android_log_print(ANDROID_LOG_INFO,  TAG, fmt, ##args)
#define LOGD(fmt, args...) __android_log_print(ANDROID_LOG_DEBUG, TAG, fmt, ##args)
#define LOGE(fmt, args...) __android_log_print(ANDROID_LOG_ERROR, TAG, fmt, ##args)

char* Dev_Name = "/dev/matrix_screen";

#define  MATRIX_SCREEN_SHOW_GB2312			0X19
#define  MATRIX_SCREEN_SHOW_ONE_SCREEN		0X20


#ifndef _Included_com_example_testmatrix_TestMatrixScreen
#define _Included_com_example_testmatrix_TestMatrixScreen
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_example_testmatrix_TestMatrixScreen
 * Method:    MatrixScreenShowGroupname
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_example_testmatrix_TestMatrixScreen_MatrixScreenShowGroupname
        (JNIEnv *env, jobject thiz, jstring name)
{
    int ret = 0;
    int handle;
    int i;
    int length = 0;

    char buf[512]={0};
    const char *str = env->GetStringUTFChars(name, 0);
    length = env->GetStringUTFLength(name);

    memset(buf,0,sizeof(buf));

    if(length > 512)
        memcpy(buf,str,512);
    else
        memcpy(buf,str,length);

    env->ReleaseStringUTFChars(name, str);

    LOGI("MatrixScreenShowGroupname str = %s", str);
    LOGI("MatrixScreenShowGroupname length = %d", length);

    /*
    char * rtn = NULL;
        jclass clsstring = env->FindClass("java/lang/String");
        jstring strencode = env->NewStringUTF("UTF-8");
        jmethodID mid = env->GetMethodID(clsstring, "getBytes", "(Ljava/lang/String;)[B");
        jbyteArray barr= (jbyteArray)env->CallObjectMethod(name,mid,strencode);
        jsize alen = env->GetArrayLength(barr);
        jbyte * ba = env->GetByteArrayElements(barr,JNI_FALSE);
        if(alen > 0)
        {
            rtn = (char*)malloc(alen+1); //new char[alen+1];
            memcpy(rtn,ba,alen);
            rtn[alen]=0;
        }

        env->ReleaseByteArrayElements(barr,ba,0);
*/
    for(i=0;i<512;i++){
        LOGI("MatrixScreenShowGroupname,buf[%d],%d",i,buf[i]);
    }
    handle = open(Dev_Name, O_RDWR);
    if (handle < 0)
    {
        //#ifdef DEBUG_LOG
        LOGD("MatrixScreenShowGroupname open failed");
        //#endif
        //return 	ret;
    }

    //write one RSET frame
    ret = ioctl( handle, MATRIX_SCREEN_SHOW_GB2312, &buf);
    if (ret < 0) {
        LOGD("MatrixScreenShowGroupname ,result,%d",ret);
    }
    else
    {
        LOGD("MatrixScreenShowGroupname ,result,%d",ret);
    }




    close(handle);

    //return pinVal;
}

JNIEXPORT void JNICALL Java_com_example_testmatrix_TestMatrixScreen_MatrixScreenShowOneScreen
        (JNIEnv *env, jobject thiz, jcharArray buffer)
{
    int ret = 0;
    int handle;
    int i;
    int length = 0;

    char buf_one[1024*2]={0};
    char buf[1024]={0};
    jchar *str = env->GetCharArrayElements(buffer, 0);
    length = env->GetArrayLength(buffer);

    memset(buf,0,sizeof(buf));


    if(length > 1024)
        memcpy(buf_one,str,1024*2);
    else
        memcpy(buf_one,str,length*2);

    env->ReleaseCharArrayElements(buffer, str, 0);

    //LOGI("MatrixScreenShowOneScreen str = %s", str);
    LOGI("MatrixScreenShowOneScreen length = %d", length);


    for(i=0;i<1024;i++){
        LOGI("MatrixScreenShowOneScreen, before buf[%d],%d",i,buf_one[i]);
        buf[i] = buf_one[i*2];
        LOGI("MatrixScreenShowOneScreen,after buf[%d],%d",i,buf[i]);
    }
    handle = open(Dev_Name, O_RDWR);
    if (handle < 0)
    {
        //#ifdef DEBUG_LOG
        LOGD("MatrixScreenShowOneScreen open failed");
        //#endif
        //return 	ret;
    }

    //write one RSET frame
    ret = ioctl( handle, MATRIX_SCREEN_SHOW_ONE_SCREEN, &buf);
    if (ret < 0) {
        LOGD("MatrixScreenShowGroupname ,result,%d",ret);
    }
    else
    {
        LOGD("MatrixScreenShowGroupname ,result,%d",ret);
    }

    close(handle);

    //return pinVal;
}
#ifdef __cplusplus
}
#endif
#endif
